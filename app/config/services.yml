# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Helkiper\BlogBundle\:
        resource: '../../src/Helkiper/BlogBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/Helkiper/BlogBundle/{Entity,Repository,Migrations,Tests}'

    Helkiper\StatisticBundle\:
        resource: '../../src/Helkiper/StatisticBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/Helkiper/StatisticBundle/{Entity,Repository,Migrations,Tests}'

#    # controllers are imported separately to make sure they're public
#    # and have a tag that allows actions to type-hint services
#    HelkiperBlogBundle\Controller\:
#        resource: '../../src/HelkiperBlogBundle/Controller'
#        public: true
#        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    Helkiper\StatisticBundle\EventListener\StatisticTerminateListener:
        tags:
            - { name: kernel.event_listener, event: kernel.terminate }