<?php

namespace Helkiper\BlogBundle\Controller;

use Helkiper\BlogBundle\Entity\Comment;
use Helkiper\BlogBundle\Entity\Post;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;

/**
 * Post controller.
 *
 */
class PostController extends Controller
{
    /**
     * Lists all post entities.
     *
     */
    public function indexAction()
    {
        $em = $this->getDoctrine()->getManager();

        $posts = $em->getRepository('HelkiperBlogBundle:Post')->findAll();

        return $this->render('post/index.html.twig', array(
            'posts' => $posts,
        ));
    }

    /**
     * Creates a new post entity.
     *
     */
    public function newAction(Request $request)
    {
        $post = new Post();
        $form = $this->createForm('Helkiper\BlogBundle\Form\PostType', $post);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
	        $file = $post->getFile();
	        if($file) {

		        $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

		        $file->move(
			        $this->getParameter('uploads_directory'),
			        $fileName
		        );

		        $post->setFile($fileName);
	        }

            $em = $this->getDoctrine()->getManager();
            $em->persist($post);
            $em->flush();

            return $this->redirectToRoute('post_show', array('id' => $post->getId()));
        }

        return $this->render('post/new.html.twig', array(
            'post' => $post,
            'form' => $form->createView(),
        ));
    }

    /**
     * Finds and displays a post entity.
     *
     */
    public function showAction(Post $post)
    {
    	$em = $this->getDoctrine()->getManager();
    	$comments = $em->getRepository('HelkiperBlogBundle:Comment')->findBy(array('post' => $post));

	    $comment = new Comment();
	    $comment->setPost($post);
	    $newCommentForm = $this->createForm('Helkiper\BlogBundle\Form\CommentType', $comment);

        $deleteForm = $this->createDeleteForm($post);

        return $this->render('post/show.html.twig', array(
            'post' => $post,
            'comments' => $comments,
            'delete_form' => $deleteForm->createView(),
	        'new_comment_form' => $newCommentForm->createView(),
        ));
    }

    /**
     * Displays a form to edit an existing post entity.
     *
     */
    public function editAction(Request $request, Post $post)
    {
    	$filename = $post->getFile();
    	if($filename) {
		    $post->setFile(new File($this->getParameter('uploads_directory') . '/' . $filename));
	    }

        $deleteForm = $this->createDeleteForm($post);
        $editForm = $this->createForm('Helkiper\BlogBundle\Form\PostType', $post);
        $editForm->handleRequest($request);

        if ($editForm->isSubmitted() && $editForm->isValid()) {
        	if($post->isDeleteFile()){
        		//TODO: deleteFile
		        $post->setFile('');
	        }
        	elseif ($post->getFile()){
		        $file = $post->getFile();
		        if($file) {

			        $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

			        $file->move(
				        $this->getParameter('uploads_directory'),
				        $fileName
			        );

			        $post->setFile($fileName);
		        }
	        }

            $this->getDoctrine()->getManager()->flush();

            return $this->redirectToRoute('post_show', array('id' => $post->getId()));
        }

        return $this->render('post/edit.html.twig', array(
            'post' => $post,
            'filename' => $filename,
            'edit_form' => $editForm->createView(),
            'delete_form' => $deleteForm->createView(),
        ));
    }

    /**
     * Deletes a post entity.
     *
     */
    public function deleteAction(Request $request, Post $post)
    {
        $form = $this->createDeleteForm($post);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $em = $this->getDoctrine()->getManager();
            $em->remove($post);
            $em->flush();
        }

        return $this->redirectToRoute('helkiper_blog_index');
    }

    /**
     * Creates a form to delete a post entity.
     *
     * @param Post $post The post entity
     *
     * @return \Symfony\Component\Form\Form The form
     */
    private function createDeleteForm(Post $post)
    {
        return $this->createFormBuilder()
            ->setAction($this->generateUrl('post_delete', array('id' => $post->getId())))
            ->setMethod('DELETE')
            ->getForm()
        ;
    }

	/**
	 * @return string
	 */
	private function generateUniqueFileName()
	{
		// md5() reduces the similarity of the file names generated by
		// uniqid(), which is based on timestamps
		return md5(uniqid());
	}
}
